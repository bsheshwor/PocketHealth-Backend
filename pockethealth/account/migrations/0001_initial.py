# Generated by Django 3.2.8 on 2022-04-01 02:03

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('use', models.CharField(blank=True, choices=[('1', 'Home'), ('2', 'Work'), ('3', 'Temporary'), ('4', 'Billing')], max_length=225, null=True)),
                ('address_type', models.CharField(blank=True, choices=[('1', 'Postal'), ('2', 'Physical'), ('3', 'Postal & Physical')], max_length=40, null=True)),
                ('text', models.CharField(blank=True, max_length=500, null=True)),
                ('line', models.CharField(blank=True, max_length=225, null=True)),
                ('city', models.CharField(blank=True, max_length=225, null=True)),
                ('district', models.CharField(blank=True, max_length=225, null=True)),
                ('state', models.CharField(blank=True, max_length=225, null=True)),
                ('postalCode', models.CharField(blank=True, max_length=225, null=True)),
                ('country', models.CharField(blank=True, max_length=225, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Annotation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField()),
                ('text', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='CareTeam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=15, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(blank=True, max_length=225, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relationship', models.CharField(blank=True, choices=[('C', 'Emergency Contact'), ('E', 'Employer'), ('F', 'Federal Agency'), ('I', 'Insurance Company'), ('N', 'Next-of-Kin'), ('S', 'State Agency'), ('U', 'Unknown')], max_length=225, null=True)),
                ('gender', models.CharField(blank=True, choices=[('1', 'male'), ('2', 'female'), ('3', 'other'), ('4', 'unknown')], max_length=225, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ContactPoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('system', models.CharField(blank=True, choices=[('1', 'phone'), ('2', 'fax'), ('3', 'email'), ('4', 'pager'), ('5', 'url'), ('6', 'sms')], max_length=20, null=True)),
                ('value', models.CharField(blank=True, max_length=255, null=True)),
                ('use', models.CharField(blank=True, choices=[('1', 'Mobile'), ('2', 'Work'), ('3', 'Home'), ('4', 'Other')], max_length=255, null=True)),
                ('rank', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Deceased',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deceasedBoolean', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='HealthcareService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField()),
                ('name', models.CharField(max_length=255)),
                ('comment', models.CharField(max_length=255)),
                ('appointmentRequired', models.BooleanField()),
                ('availabilityExceptions', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='HumanName',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('use', models.CharField(blank=True, choices=[('1', 'usual'), ('2', 'official'), ('3', 'temp'), ('4', 'nickname'), ('5', 'anonymous'), ('6', 'old'), ('7', 'maiden')], default='2', max_length=225, null=True)),
                ('text', models.CharField(blank=True, max_length=225, null=True)),
                ('family', models.CharField(blank=True, max_length=225, null=True)),
                ('given', models.CharField(blank=True, max_length=225, null=True)),
                ('prefix', models.CharField(blank=True, max_length=10, null=True)),
                ('suffix', models.CharField(blank=True, max_length=225, null=True)),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='name', to='account.contact')),
            ],
        ),
        migrations.CreateModel(
            name='Link',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link_type', models.CharField(blank=True, choices=[('1', 'replaced-by'), ('2', 'replaces'), ('3', 'refer'), ('4', 'seealso')], max_length=225, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=15, null=True)),
                ('alias', models.CharField(blank=True, max_length=15, null=True)),
                ('description', models.CharField(blank=True, max_length=15, null=True)),
                ('availabilityExceptions', models.CharField(blank=True, max_length=15, null=True)),
                ('healthcareservice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='location', to='account.healthcareservice')),
            ],
        ),
        migrations.CreateModel(
            name='MaritalStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=15, null=True)),
                ('text', models.CharField(blank=True, choices=[('A', 'Annulled'), ('D', 'Divorced'), ('I', 'Interlocutory'), ('L', 'Legally Separated'), ('M', 'Married'), ('P', 'Polygamous'), ('S', 'Never Married'), ('T', 'Domestic partner'), ('U', 'unmarried'), ('W', 'Widowed'), ('UNK', 'unknown')], max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='notAvailableTime',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=255)),
                ('healthcareservice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notAvailable', to='account.healthcareservice')),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField()),
                ('types', models.CharField(choices=[('prob', 'Healthcare Provider'), ('dept', 'Hospital Department'), ('team', 'Organizational Team'), ('govt', 'Government'), ('ins', 'Insurance Company'), ('pay', 'Payer'), ('edu', 'Educational Institute'), ('reli', 'Religious Institution'), ('crs', 'Clinical Research Sponsor'), ('cg', 'Community Group'), ('bus', 'Non-Healthcare Business or Corporation'), ('other', 'Other')], max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('alias', models.CharField(max_length=255)),
                ('careteam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='managingOrganization', to='account.careteam')),
                ('healthcareservice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='providedBy', to='account.healthcareservice')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='managingOrganization', to='account.location')),
            ],
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RelatedPerson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('g_code', models.CharField(blank=True, max_length=15, null=True)),
                ('gender', models.CharField(choices=[('1', 'male'), ('2', 'female'), ('3', 'other'), ('4', 'unknown')], max_length=255, null=True)),
                ('r_code', models.CharField(blank=True, max_length=15, null=True)),
                ('relationship', models.CharField(choices=[('C', 'Emergency Contact'), ('E', 'Employer'), ('F', 'Federal Agency'), ('I', 'Insurance Company'), ('N', 'Next-of-Kin'), ('S', 'State Agency'), ('U', 'Unknown')], max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='account.user')),
                ('occupation', models.CharField(db_index=True, max_length=100)),
            ],
            options={
                'abstract': False,
            },
            bases=('account.user', models.Model),
        ),
        migrations.CreateModel(
            name='Practitioner',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='account.user')),
                ('hospital_name', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('account.user', models.Model),
        ),
        migrations.CreateModel(
            name='Types',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(choices=[('DX', 'Diagnostics or therapeutics unit'), ('CVDX', 'Cardiovascular diagnostics or therapeutics unit'), ('CATH', 'Cardiac catheterization lab'), ('ECHO', 'Echocardiography lab'), ('GIDX', 'Gastroenterology diagnostics or therapeutics lab'), ('ENDOS', 'Endoscopy lab'), ('RADDX', 'Radiology diagnostics or therapeutics unit'), ('RADO', 'Radiation oncology unit'), ('RNEU', 'Neuroradiology unit'), ('HOSP', 'Hospital'), ('CHR', 'Chronic Care Facility'), ('GACH', 'Hospitals; General Acute Care Hospital'), ('MHSP', 'Military Hospital'), ('PSYCHF', 'Psychatric Care Facility'), ('RH', 'Rehabilitation hospital'), ('RHAT', 'addiction treatment center'), ('RHII', 'intellectual impairment center'), ('RHMAD', 'parents with adjustment difficulties center'), ('RHPI', 'physical impairment center'), ('RHPIH', 'physical impairment - hearing center'), ('RHPIMS', 'physical impairment - motor skills center'), ('RHPIVS', 'physical impairment - visual skills center'), ('RHYAD', 'youths with adjustment difficulties center'), ('HU', 'Hospital unit'), ('BMTU', 'Bone marrow transplant unit'), ('CCU', 'Coronary care unit'), ('CHEST', 'Chest unit'), ('EPIL', 'Epilepsy unit')], max_length=255)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='types', to='account.location')),
            ],
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(choices=[('5', 'Case Management for Older Persons\t'), ('30', 'Reiki'), ('60', 'Nutrition'), ('64', 'Pharmacy'), ('58', 'Maternal & Child Health\t'), ('51', 'Blood Donation\t'), ('88', 'General Dental'), ('117', 'Emergency Medical\t'), ('102', 'Disability Supported Accommodation'), ('136', 'Mental Health Case Management'), ('151', 'Yoga'), ('159', 'Pathology - General'), ('165', 'Cardiology'), ('177', 'Neurology'), ('216', 'Neurosurgery'), ('226', 'Ambulance'), ('227', 'Blood Transport'), ('254', 'Asthma'), ('251', 'Arthritis'), ('268', 'Bone'), ('270', 'Brain'), ('284', 'Child Care'), ('316', 'Depression'), ('318', 'Diabetes'), ('396', 'Oral Hygiene'), ('380', 'Lung'), ('410', 'Pregnancy')], max_length=255)),
                ('healthcareservice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='types', to='account.healthcareservice')),
            ],
        ),
        migrations.CreateModel(
            name='StatusCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(choices=[('proposed', 'Proposed'), ('active', 'Active'), ('suspended', 'Suspended'), ('inactive', 'Inactive'), ('entered-in-error', 'Entered in Error')], max_length=255)),
                ('careteam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='status', to='account.careteam')),
            ],
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(choices=[('active', 'Active'), ('suspended', 'Suspended'), ('inactive', 'Inactive')], max_length=255)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='status', to='account.location')),
            ],
        ),
        migrations.CreateModel(
            name='Speciality',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(choices=[('394579002', 'Cardiology'), ('408462000', 'Burns Care'), ('394577000', 'Anesthetics'), ('421661004', 'Blood banking and transfusion medicine'), ('408478003', 'Critical care medicine'), ('394812008', 'Dental medicine specialties'), ('394582007', 'Dermatology'), ('408475000', 'Diabetic Medicine'), ('394802001', 'General medicine'), ('394586005', 'Gynecology'), ('394591006', 'Neurology'), ('394914008', 'Radiology'), ('394602003', 'Rehabilitation'), ('394810000', 'Rheumatology'), ('394609007', 'Surgery-general'), ('394612005', 'Urology')], max_length=255)),
                ('healthcareservice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='speciality', to='account.healthcareservice')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceProvisionCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(choices=[('free', 'Free'), ('disc', 'Discounts Available'), ('cost', 'Fees apply')], max_length=255)),
                ('healthcareservice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='serviceProvisionCode', to='account.healthcareservice')),
            ],
        ),
        migrations.CreateModel(
            name='ReferralMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(choices=[('fax', 'Fax'), ('phone', 'Phone'), ('elec', 'Secure Messaging'), ('semail', 'Secure Email'), ('mail', 'Mail')], max_length=255)),
                ('healthcareservice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='referralMethod', to='account.healthcareservice')),
            ],
        ),
        migrations.CreateModel(
            name='ReasonCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(choices=[('219006', 'Alcohol User'), ('237009', 'Acute myringitis'), ('368009', 'Heart valve disorder\t'), ('409002', 'Food allergy diet'), ('165002', 'Accident-prone'), ('199004', 'Decreased Lactation'), ('437009', 'Abnormal Composition of urine'), ('488007', 'Fibroid Myocarditis'), ('652005', 'Ganfrenois tonsilitis'), ('675003', 'Torsion of intestine'), ('788006', 'Disease related Diet'), ('8549000', 'Total Cataract'), ('1108009', 'Female pattern alopecia'), ('1208004', 'Gastroptosis'), ('1427008', 'Intraspinal abscess'), ('1939005', 'Abnormal vascular flow\t'), ('2043009', 'Alcoholic gastritis'), ('2388001', 'Normal variation in translucency'), ('2999009', 'Injury of ear region\t'), ('3002002', 'Thyroid Hemorrhage'), ('3095005', 'Induced malaria'), ('3640000', 'Late effect of traumatic amputation'), ('3712000', 'Degenerated eye'), ('3716002', 'Thyroid goiter'), ('4448006', 'Allergic headache\t'), ('4473006', 'Migraine with aura'), ('9999999999', 'Others')], max_length=255)),
                ('participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reasonCode', to='account.participant')),
            ],
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(choices=[('1', 'Acquired Brain Injury (ABI) Program '), ('2', 'ABI Slow To Recover (ABI STR) Program'), ('3', 'Access Programs'), ('4', 'Adult and Further Education (ACFE) Program'), ('5', 'Adult Day Activity and Support Services (ADASS) Program'), ('6', 'Adult Day Care Program'), ('7', 'ATSS (Adult Training Support Service)'), ('8', 'Community Aged Care Packages (CACP)'), ('9', 'Care Coordination & Supplementary Services (CCSS)'), ('10', 'Cognitive Dementia Memory Service (CDAMS)'), ('11', 'ChildFIRST'), ('12', 'Childrens Contact Services'), ('13', 'Community Visitors Scheme'), ('14', 'CPP (Community Partners Program)'), ('15', 'Closing the Gap (CTG)'), ('16', 'Coordinated Veterans Care (CVC) Program'), ('17', 'Day Program'), ('18', 'Drop In Program'), ('19', 'Early Years Program'), ('20', 'Employee Assistance Program'), ('21', 'Home And Community Care (HACC)'), ('22', 'Hospital Admission Risk Program (HARP)'), ('23', 'Hospital in the Home (HITH) Program'), ('24', 'ICTP (Intensive Community Treatment Program)'), ('25', 'IFSS (Intensive Family Support Program)'), ('26', 'JPET (Job Placement, Education and Training)'), ('27', 'Koori Juvenile Justice Program'), ('28', 'Language Literacy and Numeracy Program'), ('29', 'Life Skills Program'), ('30', 'LMP (Lifestyle Modification Program)'), ('31', 'MedsCheck Program'), ('32', 'Methadone/Buprenorphine Program'), ('33', 'National Disabilities Insurance Scheme (NDIS)'), ('34', 'National Diabetes Services Scheme (NDSS)'), ('35', 'Needle/Syringe Program'), ('36', 'nPEP Program'), ('37', 'Personal Support Program'), ('38', 'Partners in Recovery (PIR) Program'), ('39', 'Pre-employment Program'), ('40', 'Reconnect Program'), ('41', 'Sexual Abuse Counselling and Prevention Program (SACPP)'), ('42', 'Social Support Programs'), ('43', 'Supported Residential Service (SRS)'), ('44', 'Tasmanian Aboriginal Centre (TAC)'), ('45', 'Victims Assistance Program')], max_length=255)),
                ('healthcareservice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='program', to='account.healthcareservice')),
            ],
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('longitude', models.DecimalField(decimal_places=5, max_digits=255)),
                ('latitude', models.DecimalField(decimal_places=5, max_digits=255)),
                ('altitude', models.DecimalField(decimal_places=5, max_digits=255)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='position', to='account.location')),
            ],
        ),
        migrations.CreateModel(
            name='Period',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateTimeField(auto_now_add=True, null=True)),
                ('end', models.DateTimeField(auto_now_add=True, null=True)),
                ('address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='period', to='account.address')),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='period', to='account.contact')),
                ('contactpoint', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='period', to='account.contactpoint')),
                ('humanname', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='period', to='account.humanname')),
                ('notavailabletime', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='during', to='account.notavailabletime')),
                ('participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='period', to='account.participant')),
            ],
        ),
        migrations.CreateModel(
            name='ParticipantRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(choices=[('375005', 'Sibling'), ('Adoptive Father', '609005'), ('9947008', 'Natural Father'), ('9306000', 'Legal Parent'), ('13646006', 'Natural Parent'), ('14469008', 'Legal Child'), ('19343003', 'Twin sister'), ('15130002', 'Surrogate Parent'), ('21464003', 'Adoptive Mother'), ('34871008', 'Grand Father'), ('34591001', 'Niece'), ('33969000', 'Great-Grand Parent'), ('40683002', 'Parent'), ('55538000', 'Cousin'), ('60614009', 'Natural Brother'), ('65616008', 'Son'), ('65656005', 'Natural Mother'), ('65853000', 'Student'), ('66089001', 'Daughter'), ('66839005', 'Father'), ('70578009', 'Grand Son'), ('72705000', 'Mother'), ('82101005', 'Natural Sibbling'), ('83559000', 'Nephew'), ('105456007', 'Live Donor'), ('105458008', 'Candidate Donor'), ('105459000', 'Accepted Doner'), ('105461009', 'Orgran Donor'), ('105471007', 'Blood Donor'), ('113158001', 'Grandmother'), ('116154003', 'Patient'), ('127849001', 'Husband'), ('127850001', 'Wife'), ('133933007', 'NewBorn'), ('133936004', 'Adult')], max_length=255)),
                ('participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='role', to='account.participant')),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationContact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purpose', models.CharField(choices=[('BILL', 'Billing'), ('ADMIN', 'Administrative'), ('HR', 'Human Resource'), ('PAYOR', 'Payor'), ('PATINF', 'Patient'), ('PRESS', 'Press')], max_length=255)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contact', to='account.organization')),
            ],
        ),
        migrations.AddField(
            model_name='organization',
            name='participant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='onBehalfOf', to='account.participant'),
        ),
        migrations.CreateModel(
            name='OperationalStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(choices=[('C', 'Closed'), ('H', 'HouseKeeping'), ('I', 'Isolated'), ('K', 'Contaminated'), ('O', 'Occupied'), ('U', 'Unoccupied')], max_length=255)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='operationalStatus', to='account.location')),
            ],
        ),
        migrations.CreateModel(
            name='Mode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(choices=[('instance', 'Instance'), ('kind', 'Kind')], max_length=255)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mode', to='account.location')),
            ],
        ),
        migrations.AddField(
            model_name='humanname',
            name='oganizationcontact',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='name', to='account.organizationcontact'),
        ),
        migrations.AddField(
            model_name='humanname',
            name='relatedperson',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='related_person_name', to='account.relatedperson'),
        ),
        migrations.CreateModel(
            name='HoursOfOperation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('daysOfWeek', models.CharField(choices=[('mon', 'Monday'), ('tue', 'Tuesday'), ('wed', 'Wednesday'), ('thu', 'Thursday'), ('fri', 'Friday'), ('sat', 'Saturday'), ('sun', 'Sunday')], max_length=255)),
                ('allDay', models.BooleanField()),
                ('openingTime', models.TimeField()),
                ('closingTime', models.TimeField()),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hoursOfOperation', to='account.location')),
            ],
        ),
        migrations.CreateModel(
            name='HealthcareCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(choices=[('1', 'Adoption'), ('2', 'Aged Care'), ('34', 'Allied Health'), ('3', 'Alternative/Complementary Therapies'), ('4', 'Child Care /Kindergarten'), ('5', 'Child Development'), ('6', 'Child Protection & Family Services'), ('7', '\tCommunity Health Care'), ('8', 'Counselling'), ('36', 'Crisis Line (GPAH use only)'), ('9', 'Death Services'), ('10', 'Dental'), ('11', 'Disability Support'), ('12', 'Drug/Alcohol'), ('13', 'Education & Learning'), ('14', 'Emergency Department'), ('15', 'Employment'), ('16', 'Financial & Material Aid'), ('17', 'General Practice'), ('35', 'Hospital'), ('18', 'Housing/Homelessness'), ('19', 'Interpreting'), ('20', 'Justice'), ('21', 'Legal'), ('22', 'Mental Health'), ('38', 'NDIA'), ('23', 'Physical Activity & Recreation'), ('24', 'Regulation'), ('25', 'Respite/Carer Support'), ('26', 'Specialist Clinical Pathology'), ('27', 'Specialist Medical'), ('28', 'Specialist Obstetrics & Gynecology'), ('29', 'Specialist Paediatric'), ('30', 'Specialist Radiology/Imaging'), ('31', 'Specialist Surgical'), ('32', 'Support Group/s'), ('37', 'Test Message (HSD admin)'), ('33', 'Transport')], max_length=255)),
                ('healthcareservice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='category', to='account.healthcareservice')),
            ],
        ),
        migrations.AddField(
            model_name='contactpoint',
            name='healthcareservice',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='telecom', to='account.healthcareservice'),
        ),
        migrations.AddField(
            model_name='contactpoint',
            name='organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='telecom', to='account.organization'),
        ),
        migrations.AddField(
            model_name='contactpoint',
            name='organizationcontact',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='telecom', to='account.organizationcontact'),
        ),
        migrations.AddField(
            model_name='contactpoint',
            name='relatedperson',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='related_person_contact_point', to='account.relatedperson'),
        ),
        migrations.AddField(
            model_name='contact',
            name='organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='organization', to='account.organization'),
        ),
        migrations.CreateModel(
            name='Communication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.CharField(blank=True, choices=[('ar', 'Arabic'), ('bn', 'Bengali'), ('cs', 'Czech'), ('da', 'Danish'), ('de', 'German'), ('de-AT', 'German (Austria)'), ('de-CH', 'German (Switzerland)'), ('de-DE', 'German (Germany)'), ('el', 'Greek'), ('en', 'English'), ('en-AU', 'English (Australia)'), ('en-CA', 'English (Canada)'), ('en-GB', 'English (Great Britain)'), ('en-IN', 'English (India)'), ('en-NZ', 'English (New Zeland)'), ('en-SG', 'English (Singapore)'), ('en-US', 'English (United States)'), ('es', 'Spanish'), ('es-AR', 'Spanish (Argentina)'), ('es-ES', 'Spanish (Spain)'), ('es-UY', 'Spanish (Uruguay)'), ('fi', 'Finnish'), ('fr', 'French'), ('fr-BE', 'French (Belgium)'), ('fr-CH', 'French (Switzerland)'), ('fr-FR', 'French (France)'), ('fy', 'Frysian'), ('fy-NL', 'Frysian (Netherlands)'), ('hi', 'Hindi'), ('hr', 'Croatian'), ('it', 'Italian'), ('it-CH', 'Italian (Switzerland)'), ('it-IT', 'Italian (Italy)'), ('ja', 'Japanese'), ('ko', 'Korean'), ('ne', 'Nepali'), ('nl', 'Dutch'), ('nl-BE', 'Dutch (Belgium)'), ('nl-NL', 'Dutch (Netherlands)'), ('no', 'Norwegian'), ('no-NO', 'Norwegian (Norway)'), ('pa', 'Punjabi'), ('pl', 'Polish'), ('pt', 'Portuguese'), ('pt-BR', 'Portuguese (Brazil)'), ('ru', 'Russian'), ('ru-RU', 'Russian (Russia)'), ('sr', 'Serbian'), ('sr-RS', 'Serbian (Serbia)'), ('sv', 'Swedish'), ('sv-SE', 'Swedish (Sweden)'), ('te', 'Telegu'), ('zh', 'Chinese'), ('zh-CN', 'Chinese (China)'), ('zh-HK', 'Chinese (Hong Kong)'), ('zh-SG', 'Chinese (Singapore)'), ('zh-TW', 'Chinese (Taiwan)')], default='en-US', max_length=225, null=True)),
                ('preferred', models.BooleanField()),
                ('healthcareservice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='communication', to='account.healthcareservice')),
            ],
        ),
        migrations.CreateModel(
            name='availableTime',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('daysOfWeek', models.CharField(choices=[('mon', 'Monday'), ('tue', 'Tuesday'), ('wed', 'Wednesday'), ('thu', 'Thursday'), ('fri', 'Friday'), ('sat', 'Saturday'), ('sun', 'Sunday')], max_length=255)),
                ('allDay', models.BooleanField()),
                ('availableStartTIme', models.TimeField()),
                ('availabelEndTIme', models.TimeField()),
                ('healthcareservice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='availableTime', to='account.healthcareservice')),
            ],
        ),
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('authorString', models.CharField(max_length=255)),
                ('Annotation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='author', to='account.annotation')),
            ],
        ),
        migrations.AddField(
            model_name='annotation',
            name='careteam',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='note', to='account.careteam'),
        ),
        migrations.AddField(
            model_name='address',
            name='contact',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='address', to='account.contact'),
        ),
        migrations.AddField(
            model_name='address',
            name='location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='address', to='account.location'),
        ),
        migrations.AddField(
            model_name='address',
            name='organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='address', to='account.organization'),
        ),
        migrations.AddField(
            model_name='address',
            name='organizationcontact',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='address', to='account.organizationcontact'),
        ),
        migrations.AddField(
            model_name='address',
            name='relatedperson',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='related_person_address', to='account.relatedperson'),
        ),
        migrations.CreateModel(
            name='Telecom',
            fields=[
                ('contactpoint_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='account.contactpoint')),
                ('careteam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='telecom', to='account.careteam')),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='telecom', to='account.contact')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='telecom', to='account.location')),
            ],
            bases=('account.contactpoint',),
        ),
    ]
